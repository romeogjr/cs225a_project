<?xml version="1.0" ?>

<!-- 
The world file is an XML file that describes the world in which the simulation will take place.
The <world> tag is the root tag of the file and contains the following attributes:
	- name: Required. The name of the world.
	- gravity: Optional. The gravity vector in the world. Defaults to "0.0 0.0 -9.81".
-->
<world name="demo_world" gravity="0.0 0.0 -9.81">

	<!-- 
	The <robot> tag describes a robot in the world. There can be multiple <robot> tags in a world file.
	If there are several robots, they must have different names.
	It contains the following attributes:
		- name: Required. The name of the robot.
	-->
	<robot name="Panda">
		<!--
		The optional <origin> tag describes the position and orientation of the robot in the world.
		-->
		<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
		<!--
		the required <model> tag describes the robot model.
		It contains the following attributes:
			- dir: Required. The directory where the robot model is located.
			- path: Required. The path to the robot urdf model file from that directory
			- name: Required. The name of the robot model inside the provided urdf file
		-->
		<model dir="${SAI_MODEL_URDF_FOLDER}/panda" path="panda_arm_sphere.urdf" name="panda" />
	</robot>

	<!--
	The <static_object> tag describes a static object in the world. There can be multiple <static_object> tags in a world file.
	A static object is an object that cannot move (it is rigidly fixed in the world). Different objects must have different names.
	-->
	<static_object name="Floor">
		<!--
		The optional <origin> tag describes the position and orientation of the object in the world.
		-->
		<origin xyz="0.0 0.0 -0.05" rpy="0 0 0" />
		<!--
		The <visual> tag describes the visual representation of the object.
		If no visual representation is provided, the object will not be visible in the rendering.
		-->
		<visual>
			<!--
			The optional <origin> tag describes the position and orientation of the visual representation of the object with respect to its origin.
			-->
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<!--
			The <geometry> tag describes the geometry of the object.
			several types of geometries are supported:
				- box: defined as <box size="x y z" />
				- sphere: defined as <sphere radius="r" />
				- cylinder: defined as <cylinder radius="r" length="l" />
				- mesh: defined as <mesh filename="path_to_mesh_file" />
			-->
			<geometry>
				<box size="5.0 5.0 0.1" />
			</geometry>
			<!-- 
			The optional <material> tag describes the material properties of the object.
			It can be used to define the color and transparency of the object.
			If the visual representation is a mesh file, the material properties of the mesh file will be used.
			-->
			<material name="material_blue">
				<color rgba="0.0 0.1 0.5 1.0" />
			</material>
		</visual>
		<!-- 
		The optional <collision> tag describes the collision properties of the object.
		It is used to define the collision geometry of the object (i.e. the geometry that can interact with other objects)
		It is defined similarly to the visual tag.
		-->
		<collision>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<geometry>
				<box size="5.0 5.0 0.1" />
			</geometry>
		</collision>
	</static_object>

	<!-- 
	The <dynamic_object> tag describes a dynamic object in the world. There can be multiple <dynamic_object> tags in a world file.
	A dynamic object is an object that can move (it is not rigidly fixed in the world). Different objects must have different names.
	It is defined similarly to the static object tag.
	-->
	<dynamic_object name="Box1">
		<origin xyz="0.3 0.5 0.4" rpy="0 0 0" />
		<inertial>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<mass value="1" />
			<inertia ixx="0.1" iyy="0.1" izz="0.1" ixy="0" ixz="0" iyz="0" />
		</inertial>
		<visual>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
			<material name="material_green">
				<color rgba="0.1 0.5 0.1 1.0" />
			</material>
		</visual>
		<collision>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
		</collision>
	</dynamic_object>

	<dynamic_object name="Box2">
		<origin xyz="0.3 -0.5 0.4" rpy="0 0 0" />
		<inertial>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<mass value="1" />
			<inertia ixx="0.1" iyy="0.1" izz="0.1" ixy="0" ixz="0" iyz="0" />
		</inertial>
		<visual>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
			<material name="material_green">
				<color rgba="0.1 0.5 0.1 1.0" />
			</material>
		</visual>
		<collision>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
		</collision>
	</dynamic_object>

	<!-- 
	The <light> tag describes a light source in the world. There can be multiple <light> tags in a world file.
	A light source can be of different types (point, directional, spot) and can have different properties.
	Different lights must have different names.
	-->
	<light name="light1" type="directional">
		<position xyz="2.0 -2.0 2.0" />
		<lookat xyz="0.0 0.0 0.5" />
	</light>

	<light name="light2" type="directional">
		<position xyz="2.0 2.0 2.0" />
		<lookat xyz="0.0 0.0 0.5" />
	</light>

	<!--
	The <camera> tag describes a camera in the world. There can be multiple <camera> tags in a world file.
	The rendering needs at least one camera to capture the scene from a specific point of view.
	A camera has 3 elements:
		- position: the position of the camera in the world
		- vertical: the vertical (or up) direction of the camera
		- lookat: the point the camera is looking at
	-->
	<camera name="camera">
		<position xyz="2.0 0.0 1.0" />
		<vertical xyz="0.0 0.0 1.0" />
		<lookat xyz="0.0 0.0 0.5" />
	</camera>

</world>
